<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_sysmem_8c" xml:lang="ru">
<title>Файл Core/Src/sysmem.c</title>
<indexterm><primary>Core/Src/sysmem.c</primary></indexterm>
<para>

<para>STM32CubeIDE System Memory calls file. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &lt;errno.h&gt;<?linebreak?>#include &lt;stdint.h&gt;<?linebreak?></programlisting>Граф включаемых заголовочных файлов для sysmem.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="sysmem_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Функции    </title>
        <itemizedlist>
            <listitem><para>void * <link linkend="_sysmem_8c_1a68125648bcce70b6bb3aa0be50e99700">_sbrk</link> (ptrdiff_t incr)</para>

<para><link linkend="_sysmem_8c_1a68125648bcce70b6bb3aa0be50e99700">_sbrk()</link> allocates memory to the newlib heap and is used by malloc and others from the C library </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Подробное описание</title>

<para>STM32CubeIDE System Memory calls file. </para>

<para><formalpara><title>Автор</title>

<para>Generated by STM32CubeIDE <literallayout><computeroutput>       For more information about which C functions
       need which of these lowlevel functions
       please consult the newlib libc manual
</computeroutput></literallayout> </para>
</formalpara>
<caution><title>Внимание</title>

<para></para>
</caution>
Copyright (c) 2022 STMicroelectronics. All rights reserved.</para>

<para>This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. </para>
</section>
<section>
<title>Функции</title>
<anchor xml:id="_sysmem_8c_1a68125648bcce70b6bb3aa0be50e99700"/><section>
    <title>_sbrk()</title>
<indexterm><primary>_sbrk</primary><secondary>sysmem.c</secondary></indexterm>
<indexterm><primary>sysmem.c</primary><secondary>_sbrk</secondary></indexterm>
<para><computeroutput>void * _sbrk (ptrdiff_t incr)</computeroutput></para><para>

<para><link linkend="_sysmem_8c_1a68125648bcce70b6bb3aa0be50e99700">_sbrk()</link> allocates memory to the newlib heap and is used by malloc and others from the C library </para>
</para>

<para><literallayout><computeroutput>* ############################################################################
* #  .data  #  .bss  #       newlib heap       #          MSP stack          #
* #         #        #                         # Reserved by _Min_Stack_Size #
* ############################################################################
* ^-- RAM start      ^-- _end                             _estack, RAM end --^
* </computeroutput></literallayout></para>

<para>This implementation starts allocating at the &apos;_end&apos; linker symbol The &apos;_Min_Stack_Size&apos; linker symbol reserves a memory for the MSP stack The implementation considers &apos;_estack&apos; linker symbol to be RAM end NOTE: If the MSP stack, at any point during execution, grows larger than the reserved size, please increase the &apos;_Min_Stack_Size&apos;.</para>

<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>incr</entry><entry>
<para>Memory size </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Возвращает</title>

<para>Pointer to allocated memory </para>
</formalpara>
</para>
</section>
</section>
</section>
