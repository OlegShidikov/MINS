<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stm32f7xx__it_8c" xml:lang="ru">
<title>Файл Core/Src/stm32f7xx_it.c</title>
<indexterm><primary>Core/Src/stm32f7xx_it.c</primary></indexterm>
<para>

<para>Interrupt Service Routines. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;main.h&quot;<?linebreak?>#include &quot;stm32f7xx_it.h&quot;<?linebreak?>#include &quot;FreeRTOS.h&quot;<?linebreak?>#include &quot;task.h&quot;<?linebreak?></programlisting>Граф включаемых заголовочных файлов для stm32f7xx_it.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="stm32f7xx__it_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Функции    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_stm32f7xx__it_8c_1a6ad7a5e3ee69cb6db6a6b9111ba898bc">NMI_Handler</link> (void)</para>

<para>This function handles Non maskable interrupt. </para>
</listitem>
            <listitem><para>void <link linkend="_stm32f7xx__it_8c_1a2bffc10d5bd4106753b7c30e86903bea">HardFault_Handler</link> (void)</para>

<para>This function handles Hard fault interrupt. </para>
</listitem>
            <listitem><para>void <link linkend="_stm32f7xx__it_8c_1a3150f74512510287a942624aa9b44cc5">MemManage_Handler</link> (void)</para>

<para>This function handles Memory management fault. </para>
</listitem>
            <listitem><para>void <link linkend="_stm32f7xx__it_8c_1a850cefb17a977292ae5eb4cafa9976c3">BusFault_Handler</link> (void)</para>

<para>This function handles Pre-fetch fault, memory access fault. </para>
</listitem>
            <listitem><para>void <link linkend="_stm32f7xx__it_8c_1a1d98923de2ed6b7309b66f9ba2971647">UsageFault_Handler</link> (void)</para>

<para>This function handles Undefined instruction or illegal state. </para>
</listitem>
            <listitem><para>void <link linkend="_stm32f7xx__it_8c_1adbdfb05858cc36fc520974df37ec3cb0">DebugMon_Handler</link> (void)</para>

<para>This function handles Debug monitor. </para>
</listitem>
            <listitem><para>void <link linkend="_stm32f7xx__it_8c_1ab5e09814056d617c521549e542639b7e">SysTick_Handler</link> (void)</para>

<para>This function handles System tick timer. </para>
</listitem>
            <listitem><para>void <link linkend="_stm32f7xx__it_8c_1af0ae2b65015308b784a8a65c44134f79">OTG_HS_IRQHandler</link> (void)</para>

<para>This function handles USB On The Go HS global interrupt. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Переменные    </title>
        <itemizedlist>
            <listitem><para>PCD_HandleTypeDef <link linkend="_stm32f7xx__it_8c_1a0a95840304203648c1cce34ad1365090">hpcd_USB_OTG_HS</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Подробное описание</title>

<para>Interrupt Service Routines. </para>

<para><caution><title>Внимание</title>

<para></para>
</caution>
Copyright (c) 2023 STMicroelectronics. All rights reserved.</para>

<para>This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. </para>
</section>
<section>
<title>Функции</title>
<anchor xml:id="_stm32f7xx__it_8c_1a850cefb17a977292ae5eb4cafa9976c3"/><section>
    <title>BusFault_Handler()</title>
<indexterm><primary>BusFault_Handler</primary><secondary>stm32f7xx_it.c</secondary></indexterm>
<indexterm><primary>stm32f7xx_it.c</primary><secondary>BusFault_Handler</secondary></indexterm>
<para><computeroutput>void BusFault_Handler (void )</computeroutput></para><para>

<para>This function handles Pre-fetch fault, memory access fault. </para>
</para>
</section>
<anchor xml:id="_stm32f7xx__it_8c_1adbdfb05858cc36fc520974df37ec3cb0"/><section>
    <title>DebugMon_Handler()</title>
<indexterm><primary>DebugMon_Handler</primary><secondary>stm32f7xx_it.c</secondary></indexterm>
<indexterm><primary>stm32f7xx_it.c</primary><secondary>DebugMon_Handler</secondary></indexterm>
<para><computeroutput>void DebugMon_Handler (void )</computeroutput></para><para>

<para>This function handles Debug monitor. </para>
</para>
</section>
<anchor xml:id="_stm32f7xx__it_8c_1a2bffc10d5bd4106753b7c30e86903bea"/><section>
    <title>HardFault_Handler()</title>
<indexterm><primary>HardFault_Handler</primary><secondary>stm32f7xx_it.c</secondary></indexterm>
<indexterm><primary>stm32f7xx_it.c</primary><secondary>HardFault_Handler</secondary></indexterm>
<para><computeroutput>void HardFault_Handler (void )</computeroutput></para><para>

<para>This function handles Hard fault interrupt. </para>
</para>
</section>
<anchor xml:id="_stm32f7xx__it_8c_1a3150f74512510287a942624aa9b44cc5"/><section>
    <title>MemManage_Handler()</title>
<indexterm><primary>MemManage_Handler</primary><secondary>stm32f7xx_it.c</secondary></indexterm>
<indexterm><primary>stm32f7xx_it.c</primary><secondary>MemManage_Handler</secondary></indexterm>
<para><computeroutput>void MemManage_Handler (void )</computeroutput></para><para>

<para>This function handles Memory management fault. </para>
</para>
</section>
<anchor xml:id="_stm32f7xx__it_8c_1a6ad7a5e3ee69cb6db6a6b9111ba898bc"/><section>
    <title>NMI_Handler()</title>
<indexterm><primary>NMI_Handler</primary><secondary>stm32f7xx_it.c</secondary></indexterm>
<indexterm><primary>stm32f7xx_it.c</primary><secondary>NMI_Handler</secondary></indexterm>
<para><computeroutput>void NMI_Handler (void )</computeroutput></para><para>

<para>This function handles Non maskable interrupt. </para>
</para>
</section>
<anchor xml:id="_stm32f7xx__it_8c_1af0ae2b65015308b784a8a65c44134f79"/><section>
    <title>OTG_HS_IRQHandler()</title>
<indexterm><primary>OTG_HS_IRQHandler</primary><secondary>stm32f7xx_it.c</secondary></indexterm>
<indexterm><primary>stm32f7xx_it.c</primary><secondary>OTG_HS_IRQHandler</secondary></indexterm>
<para><computeroutput>void OTG_HS_IRQHandler (void )</computeroutput></para><para>

<para>This function handles USB On The Go HS global interrupt. </para>
</para>
</section>
<anchor xml:id="_stm32f7xx__it_8c_1ab5e09814056d617c521549e542639b7e"/><section>
    <title>SysTick_Handler()</title>
<indexterm><primary>SysTick_Handler</primary><secondary>stm32f7xx_it.c</secondary></indexterm>
<indexterm><primary>stm32f7xx_it.c</primary><secondary>SysTick_Handler</secondary></indexterm>
<para><computeroutput>void SysTick_Handler (void )</computeroutput></para><para>

<para>This function handles System tick timer. </para>
</para>
</section>
<anchor xml:id="_stm32f7xx__it_8c_1a1d98923de2ed6b7309b66f9ba2971647"/><section>
    <title>UsageFault_Handler()</title>
<indexterm><primary>UsageFault_Handler</primary><secondary>stm32f7xx_it.c</secondary></indexterm>
<indexterm><primary>stm32f7xx_it.c</primary><secondary>UsageFault_Handler</secondary></indexterm>
<para><computeroutput>void UsageFault_Handler (void )</computeroutput></para><para>

<para>This function handles Undefined instruction or illegal state. </para>
</para>
</section>
</section>
<section>
<title>Переменные</title>
<anchor xml:id="_stm32f7xx__it_8c_1a0a95840304203648c1cce34ad1365090"/><section>
    <title>hpcd_USB_OTG_HS</title>
<indexterm><primary>hpcd_USB_OTG_HS</primary><secondary>stm32f7xx_it.c</secondary></indexterm>
<indexterm><primary>stm32f7xx_it.c</primary><secondary>hpcd_USB_OTG_HS</secondary></indexterm>
<para><computeroutput>PCD_HandleTypeDef hpcd_USB_OTG_HS<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
